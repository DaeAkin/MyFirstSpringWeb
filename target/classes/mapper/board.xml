<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN/" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.min.www.Service.BoardDao"><!-- Class be looked -->

	
	
	<insert id="insertContent" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
		insert into freeboard (
			id, <!-- 서버구동시 삭제 id부분 -->
			title,
			writer,
			content
		
		)values (
		#{id},
		#{title},
		#{writer},
		#{smarteditor}
		
		) on duplicate key update 
		id = #{id},
		title = #{title},
		writer = #{writer},
		content = #{smarteditor}
	
	</insert>
	
	<insert id="insertReplyAlert" 
		parameterType="java.util.HashMap">
		<!--서버에 구동시 useGeneratedKeys 사용해서 
		reply_id 가져와야함. -->
		insert into freeboardreplyalter (
			board_id,
			reply_id

			) values (
			#{board_id},
			#{reply_id})
		
	
	</insert>
	
	<!-- 댓글 -->
	<insert id="insertBoardReply"  parameterType="java.util.HashMap"
	 useGeneratedKeys="true" 
	keyProperty="reply_id" >
	insert into freeboardreply (
	<!-- 테스트시에 -->
		
	<!--  -->
		board_id,
		parent_id,
		depth,
		reply_content,
		reply_writer


	)values (
	<!--  테스트시에 -->
		
		<!--  -->
		#{board_id},
		#{parent_id},
		#{depth},
		#{reply_content},
		#{reply_writer}

	
	 ) on duplicate key update 
	
		
		board_id = #{board_id},
		parent_id = #{parent_id},
		depth = #{depth},
		reply_content = #{reply_content},
		reply_writer = #{reply_writer}
	</insert>
	
	<insert id="insertFile" parameterType="java.util.HashMap">
		INSERT INTO TB_FILE
		(
			
			BOARD_IDX,
			ORIGINAL_FILE_NAME,
			STORED_FILE_NAME,
			FILE_SIZE,
			CREA_ID
		)
		VALUES
		(
			#{BOARD_IDX},
			#{ORIGINAL_FILE_NAME},
			#{STORED_FILE_NAME},
			#{FILE_SIZE},
			#{NICKNAME}
		)
		
	</insert>
	<select id="selectContentCnt" resultType="int">
		select
			count(id)
		from
			freeboard
	</select>
	
	<select id="selectContent" resultType="com.min.www.dto.BoardDto" parameterType="java.util.HashMap">
		select
			id,
			title,
			writer,
			content,
			date_format(writetime, '%Y-%m-%d %H:%i:%s' ) writetime
		from
			freeboard
		order by id DESC
		limit #{start}, #{end}
	</select>
	
	<select id="selectContentView" resultType="com.min.www.dto.BoardDto" parameterType="java.util.HashMap">
		select
			freeboard.id,
			title,
			writer,
			content,
			date_format(writetime, '%Y-%m-%d %H:%i:%s' ) writetime
	
		from
			freeboard
		where
			id = #{id}
	</select>
	
	


	<select id="selectBoardReplyList" resultType="com.min.www.dto.BoardReplyDto" parameterType="java.util.HashMap">
		select 
		* 
		from
		 freeboardreply 
		 left outer join
	 member on
		   freeboardreply.reply_writer = member.nickname 
		   where freeboardreply.board_id = #{id} 
	  order by freeboardreply.reply_id asc;
	</select>
	<delete id="deleteBoardReply" parameterType="java.util.HashMap">
		delete
		from
			freeboardreply
		where
			reply_id = #{reply_id}
			and reply_password = #{reply_password}
	</delete>
	<select id="selectBoardCnt" resultType="int" parameterType="java.util.HashMap">
		select
			count(id)
		from
			freeboard
		where
			id = #{id}
			and password = #{password}
	</select>
	<delete id="deleteBoard" parameterType="java.util.HashMap">
		delete
		from
			freeboard
		where
			id = #{id}
			and password = #{password}
			
	</delete>
	
	<!--  검색을 하면 몇개가 검색 되는 -->
	<select id="selectSeachedContentCnt" parameterType="java.util.HashMap" resultType="java.lang.Integer">
	
		select 
			count(id)
		from
			freeboard
		 where title like 
		 CONCAT('%',#{searchArea},'%') or 
		 content like  CONCAT('%',#{searchArea},'%');
		
	</select>
	
	
	<!-- 제목 + 내용 검색 -->
	<select id="selectSeachedContentCntList" parameterType="java.util.HashMap" resultType="com.min.www.dto.BoardDto">
		select 
			*
		from
			freeboard
		 where title like 
		 CONCAT('%',#{searchArea},'%') or 
		 content like  CONCAT('%',#{searchArea},'%')
		 order by id DESC
		limit #{start}, #{end};
	</select>
	
	<!-- 글쓴이로만 검색  -->
		<select id="selectSeachedContentCntList2" parameterType="java.util.HashMap" resultType="com.min.www.dto.BoardDto">
		select 
			*
		from
			freeboard
		 where writer like 
		 CONCAT('%',#{searchArea},'%') 
		 order by id DESC
		limit #{start}, #{end};
	</select>
	
	<!--  게시판 댓글 웹소켓  -->
	<select id="selectSocketReply" parameterType="java.util.HashMap" resultType="com.min.www.dto.BoardReplyDto">
	select
	 * 
	 from 
	 	freeboardreply
	  where 
	  board_id IN 
	  (select id from freeboard where writer = #{id});
	<!-- id에 닉네임 넣을것 ex)대악인 -->
	</select>
	
	<delete id="deleteAllContent" >
delete from freeboard;
	</delete> 
	
	<delete id="deleteAllReply">
	delete from freeboardreply;
	</delete>
	<insert id="test">
	insert into test  (name) values ('hi');
	</insert>
	
	<select id="getBoardOne" resultType="com.min.www.dto.BoardDto" parameterType="java.lang.Integer">
	select 
		*
	from
		freeboard
	where
		id=#{id};
	</select>
	
	<select id="getReplyOne" resultType="com.min.www.dto.BoardReplyDto" parameterType="java.lang.String">
	select
		*
	from
		freeboardreply
	where
		reply_id=#{reply_id};
	
	</select>
	
	<delete id="deletelAllBoard">
		delete from freeboard;
	</delete>
	
	<select id="getBoardCnt" resultType="int">
		select
			count(id)
		from
			freeboard;
	</select>
	
	<!-- 게시물에 대한 좋아요 싫어요 가져오기 -->
	<select id="getBoardAgreeAndDisAgree" resultType="com.min.www.dto.BoardOptionsDto">
		select 
			* 
		from 
			freeboard left outer join 
		agreeanddisagree on 
		freeboard.id = agreeanddisagree.boardid;
	</select>
	
	<insert id="insertBoardAgree" parameterType="java.util.HashMap">
	insert 
		into agreeanddisagree
	(boardid,agree,disagree) values
		(#{boardid},#{agree},#{disagree})
	
	</insert>
	
	<select id="getBoardAgreeAndDisagreeOne" parameterType="int"
		resultType="com.min.www.dto.BoardOptionsDto">
		select 
			*
		from agreeanddisagree
			where 
		boardid=#{boardid}	
	</select>
	
	<!--	조인한 좋아요 싫어요 테이블 전부삭제  --> 
	<delete id="deleteAllBoardAgree">
		delete from agreeanddisagree;
	</delete>
	
	<!--  	// 게시글에 좋아요 , 싫어요를 눌렀는지 확인 -->
	<select id="isCanAgreeWithBoard"
		parameterType="java.util.HashMap" resultType="com.min.www.dto.BoardOptionsDto">
	select 
		* 
	from
		 agreeanddisagree 
	where boardid = #{boardid} 
		  and agree = #{agree}
	 OR disagree= #{disagree}
	</select>
	
	<select id="getBoardReplyCnt"
		resultType="int">
		select
			count(reply_id)
		from
			freeboardreply;
	</select>
	
	<select id="boardAlertCnt" resultType="int">
		select
			count(alert_id)
		from
			freeboardreplyalter;
	</select>
	
	<delete id="deleteAllBoardAlert">
		delete from freeboardreplyalter;
	</delete>
	
	<update id="checkingTheBoardReply" parameterType="int" >
		update 
			freeboardreplyalter
		set
			isalerted = 1
		where
			alert_id = #{alertid}
	</update>
	
	<!--  모든 알람 가져오는 쿼리 -->
	<select id="getAlerts" 
		parameterType="String"
			resultType="com.min.www.dto.BoardAndAlertJoinDto">
			
			select 
				* 
			from
				freeboard 
			left outer join 
				freeboardreplyalter 
			on 
				freeboardreplyalter.board_id = freeboard.id 
			left outer join 
				 freeboardreply 
			on 
				freeboardreply.reply_id =  freeboardreplyalter.reply_id 
			where freeboard.writer = #{writer};
			<!-- 
			select 
				* 
			from 
				freeboard  
			left outer join 
				freeboardreplyalter 
			on
				 freeboardreplyalter.board_id = freeboard.id 
			 where 
				 freeboard.writer = #{writer} -->
			 
	</select>
	
	
	<!--  댓글 한개 가져오는 쿼리이다. -->
	<select id="getOneReply" parameterType="String"
	resultType="com.min.www.dto.BoardReplyDto"
	>
		select 
			*
		from
			freeboardreply
		where
			reply_id = #{reply_id}
	</select>
	
	


	
	
</mapper>